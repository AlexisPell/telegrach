version: '3.7'

services:
  # REDIS
  redis:
    container_name: redis
    restart: always
    image: redis:5
    networks:
      - webnet
  # MONGO
  mongo:
    container_name: mongo
    hostname: mongo
    command: --quiet
    image: mongo:latest
    ports:
      - 27017:27017
    networks:
      - webnet
    restart: always
  # NGINX FOR WEB
  nginx:
    build: ./services/web/nginx
    container_name: nginx
    hostname: nginx
    ports:
      - 80:80
    networks:
      - webnet
  # WEB
  web:
    container_name: web
    build: ./services/web
    ports:
      - '3000:3000'
      - '49153:49153'
    networks:
      - webnet
    restart: always
    volumes:
      - ./services/web:/app
      - /app/node_modules
      - /app/.next

  # PROXY
  proxy-server:
    env_file:
      - .env.development
    container_name: proxy-server
    hostname: proxy-server
    build: ./services/proxy-server
    ports:
      - '8080:8080'
    networks:
      - webnet
    depends_on:
      - chats-api
    restart: always
    volumes:
      - ./services/proxy-server:/app
      - /app/node_modules

  # USERS-PROFILES-API
  users-profiles-api:
    container_name: users-profiles-api
    hostname: users-profiles-api
    build: ./services/users-profiles-api
    volumes:
      - ./services/users-profiles-api:/app
      - /app/node_modules
    ports:
      - 5000:5000
    restart: always
    env_file:
      - .env.development
    networks:
      - webnet
    depends_on:
      - redis
      - mongo

  # CHATS API
  chats-api:
    env_file:
      - .env.development
    container_name: chats-api
    hostname: chats-api
    build: ./services/chats-api
    ports:
      - '5001:5001'
    networks:
      - webnet
    depends_on:
      - mongo
    restart: always
    volumes:
      - ./services/chats-api:/app
      - /app/node_modules

networks:
  webnet:
